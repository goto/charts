app:
  image:
    repository: gotocompany/entropy
    pullPolicy: Always
    tag: "latest"
  container:
    command:
      - entropy
    args:
      - serve
      - "--worker"
    livenessProbe:
      httpGet:
        path: /ping
        port: tcp
    readinessProbe:
      httpGet:
        path: /ping
        port: tcp
  podLabels: {}
  serviceAccountName: ""

  migration:
    enabled: true
    command:
      - entropy
    args:
      - migrate

  service:
    annotations: {}

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: contour
    hosts:
      - host: entropy.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                port:
                  number: 80

  config:
    SERVER_PORT: 8080
    # SERVICE_HOST: 0.0.0.0
    # LOG_LEVEL: info
    # NEW_RELIC_ENABLED: false
    # NEW_RELIC_APP_NAME: entropy

  secretConfig: {}

worker:
  image:
    repository: gotocompany/entropy
    pullPolicy: Always
    tag: "latest"
  container:
    command:
      - entropy
    args:
      - worker
    livenessProbe:
      exec:
        command:
          - /bin/sh
          - -c
          - ps -ef | grep entropy | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
    readinessProbe:
      exec:
        command:
          - /bin/sh
          - -c
          - ps -ef | grep entropy | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
  podLabels: {}
  
  migration:
    enabled: false

  ingress:
    enabled: false

  config:
    LOG_LEVEL: INFO
    SYNCER_SYNC_INTERVAL: 1s
    SYNCER_REFRESH_INTERVAL: 3s
    SYNCER_EXTEND_LOCK_BY: 5s
    SYNCER_SYNC_BACKOFF_INTERVAL: 5s
    SYNCER_MAX_RETRIES: 5

  secretConfig: {}