app:
  image:
    repository: gotocompany/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - server
      - start
    livenessProbe:
      httpGet:
        path: /ping
        port: tcp
    readinessProbe:
      httpGet:
        path: /ping
        port: tcp
    ports:
      - name: http
        containerPort: 8080
        protocol: TCP
      - name: grpc
        containerPort: 8081
        protocol: TCP
    volumeMounts:
      - mountPath: /work-dir
        name: workdir
  initContainers:
    - args: ["wget -c https://github.com/goto/siren/releases/download/v0.6.7/siren-cortex_Linux_x86_64.tar.gz -O - | sudo tar -xz -C /work-dir/"]
      command: ["/bin/sh", "-c"]
      image: busybox:latest
      imagePullPolicy: IfNotPresent
      name: init-siren-app
      volumeMounts:
      - mountPath: /work-dir
        name: workdir
        
  podLabels: {}

  migration:
    enabled: true
    args:
      - server
      - migrate

  service:
    ports:
      - port: 80
        name: http
        targetPort: http
        protocol: TCP
      - port: 8081
        name: grpc
        targetPort: grpc
        protocol: TCP

  ingress:
    enabled: true
    hosts:
      - host: siren.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                port:
                  number: 80
      - host: siren-grpc.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                port:
                  number: 8081
  config:
    # SERVICE_PORT: 8080
    SERVICE_GRPC_PORT: 8081
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_DLQ_HANDLER_ENABLED: false
    # PROVIDERS_CORTEX_WEBHOOK_BASE_API: http://localhost:8080/v1beta1/alerts/cortex
   
  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____

  volumes:
    - name: workdir
      emptyDir: {}


notification-worker:
  image:
    repository: gotocompany/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - worker
      - start
      - notification_handler
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - ps -ef | grep siren | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - ps -ef | grep siren | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
  podLabels: {}

  migration:
    enabled: false

  ingress:
    enabled: false

  config:
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_DLQ_HANDLER_ENABLED: false
   
  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____

notification-dlq-worker:
  image:
    repository: gotocompany/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - worker
      - start
      - notification_dlq_handler
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - ps -ef | grep siren | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - ps -ef | grep siren | grep -v grep
      initialDelaySeconds: 10
      periodSeconds: 10
  podLabels: {}

  migration:
    enabled: false

  ingress:
    enabled: false
    
  config:
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_DLQ_HANDLER_ENABLED: false

  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____
